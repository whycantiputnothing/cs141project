public void look(int x) {
		int i = grid.findSpy()[0];
		int j = grid.findSpy()[1];
		BoardPiece a;
		BoardPiece b;
		
		if (x == 0) {
			a = grid.getBoardPieceAt(i - 2, j);
			a.setIsVisible(true);
			if (grid.getBoardPieceAt(i - 1, j).equals("N") || grid.getBoardPieceAt(i - 2, j).equals("N")){
				ninjaSpotted = true;
			}
			
			if (i > 2){
			b = grid.getBoardPieceAt(i - 3, j);
			b.setIsVisible(true);
				if(grid.getBoardPieceAt(i - 3, j).equals("N")){
					ninjaSpotted = true;
				}
			}
			
			
		} else if (x == 1) {
			a = grid.getBoardPieceAt(i, j - 2);
			a.setIsVisible(true);
			if (grid.getBoardPieceAt(i, j - 1).equals("N") || grid.getBoardPieceAt(i, j - 2).equals("N")){
				ninjaSpotted = true;
			}
			
			if (j > 2){
			b = grid.getBoardPieceAt(i, j - 3);
			b.setIsVisible(true);
				if (grid.getBoardPieceAt(i, j - 3).equals("N")){
					ninjaSpotted = true;
				}
			}
			
			
		} else if (x == 2) {
			a = grid.getBoardPieceAt(i + 2, j);
			a.setIsVisible(true);
			if (grid.getBoardPieceAt(i + 1, j).equals("N") || grid.getBoardPieceAt(i + 2, j).equals("N")){
				ninjaSpotted = true;
			}
			
			if (i < 7){
			b = grid.getBoardPieceAt(i + 3, j);			
			b.setIsVisible(true);
				if (grid.getBoardPieceAt(i + 3, j).equals("N")){
					ninjaSpotted = true;
				}
			}
			
			
		} else if (x == 3) {
			a = grid.getBoardPieceAt(i, j + 2);
			a.setIsVisible(true); 
			if (grid.getBoardPieceAt(i, j + 1).equals("N") || grid.getBoardPieceAt(i, j + 2).equals("N")){
				ninjaSpotted = true;
			}
			
			if (j < 7){
			b = grid.getBoardPieceAt(i, j + 3);
			b.setIsVisible(true);;
				if (grid.getBoardPieceAt(i, j + 3).equals("N")){
				ninjaSpotted = true;
			}
			}
		}
		
	}

	public boolean canSpyLook(int i){
		int[] spyPos = grid.findSpy();
		int a = spyPos[0];
		int b = spyPos[1];
		boolean canLook = true;
		
		if (i == 0){
			if (a < 2)
				canLook = false;
		} else if (i == 1){
			if (b < 2)
				canLook = false;
		} else if (i == 2){
			if (a > 6)
				canLook = false;			
		} else if (i == 3){
			if (b > 6)
				canLook = false;	
		}
		
		return canLook;
	}
		
